  
  
                              [1X FunctorCategories [101X
  
  
                            [1X Categories of functors [101X
  
  
                                   2022.10-19
  
  
                                20 October 2022
  
  
                                Mohamed Barakat
  
                                  Kamal Saleh
  
  
  
  Mohamed Barakat
      Email:    [7Xmailto:mohamed.barakat@uni-siegen.de[107X
      Homepage: [7Xhttps://mohamed-barakat.github.io/[107X
      Address:  [33X[0;14YWalter-Flex-Str. 3[133X
                [33X[0;14Y57072 Siegen[133X
                [33X[0;14YGermany[133X
  
  
  Kamal Saleh
      Email:    [7Xmailto:kamal.saleh@uni-siegen.de[107X
      Homepage: [7Xhttps://github.com/kamalsaleh[107X
      Address:  [33X[0;14YDepartment Mathematik[133X
                [33X[0;14YUniversit√§t Siegen[133X
                [33X[0;14YWalter-Flex-Stra√üe 3[133X
                [33X[0;14Y57072 Siegen[133X
                [33X[0;14YGermany[133X
  
  
  
  -------------------------------------------------------
  
  
  [1XContents (FunctorCategories)[101X
  
  1 [33X[0;0YCategories of functors[133X
    1.1 [33X[0;0YIntroduction and examples[133X
      1.1-1 [33X[0;0YRepresentations of the cyclic groups of order 3 as a category of
      functors[133X
      1.1-2 [33X[0;0YDifferential modules as a category of functors[133X
      1.1-3 [33X[0;0YThe category of equivariant maps as a category of functors[133X
      1.1-4 [33X[0;0YProof of the snake lemma in a free Abelian category[133X
      1.1-5 [33X[0;0YThe subobject classifier[133X
    1.2 [33X[0;0YOperations[133X
      1.2-1 DecomposeOnceByRandomEndomorphism
      1.2-2 WeakDirectSumDecomposition
      1.2-3 ApplyObjectInFunctorCategoryToObject
      1.2-4 ApplyMorphismInFunctorCategoryToObject
    1.3 [33X[0;0Y[5XGAP[105X Categories[133X
      1.3-1 IsFunctorCategory
      1.3-2 IsCellInFunctorCategory
      1.3-3 IsObjectInFunctorCategory
      1.3-4 IsMorphismInFunctorCategory
    1.4 [33X[0;0YAttributes[133X
      1.4-1 Source
      1.4-2 Range
      1.4-3 Source
      1.4-4 Range
      1.4-5 OppositeOfSource
      1.4-6 ValuesOfFunctor
      1.4-7 ValuesOnAllObjects
      1.4-8 UnderlyingCapTwoCategoryCell
      1.4-9 YonedaFibration
      1.4-10 YonedaProjection
      1.4-11 YonedaComposition
    1.5 [33X[0;0YConstructors[133X
      1.5-1 CategoryOfInternalCategories
      1.5-2 AsObjectInFunctorCategory
      1.5-3 AsMorphismInFunctorCategoryByValues
  2 [33X[0;0YCategory of presheaves of a finitely presented (linear) category[133X
    2.1 [33X[0;0YConstructors[133X
      2.1-1 PreSheaves
      2.1-2 CreatePreSheaf
      2.1-3 CreatePreSheafMorphismByValues
    2.2 [33X[0;0YAttributes[133X
      2.2-1 Source
      2.2-2 Range
      2.2-3 Source
      2.2-4 Range
      2.2-5 ValuesOnAllObjects
      2.2-6 UnderlyingCapTwoCategoryCell
      2.2-7 NerveTruncatedInDegree2
      2.2-8 SievesOfPathsToTruth
    2.3 [33X[0;0Y[5XGAP[105X Categories[133X
      2.3-1 IsPreSheafCategory
      2.3-2 IsCellInPreSheafCategory
      2.3-3 IsObjectInPreSheafCategory
      2.3-4 IsMorphismInPreSheafCategory
    2.4 [33X[0;0YGlobal variables[133X
      2.4-1 CAP_INTERNAL_METHOD_NAME_LIST_FOR_PRESHEAF_CATEGORY
      2.4-2 CAP_INTERNAL_METHOD_NAME_LIST_FOR_MONOIDAL_PRESHEAF_CATEGORY
      2.4-3 CAP_INTERNAL_METHOD_NAME_LIST_FOR_MONOIDAL_PRESHEAF_CATEGORY_WITH_DUALS
    2.5 [33X[0;0YOperations[133X
      2.5-1 ApplyObjectInPreSheafCategoryToObject
      2.5-2 ApplyMorphismInPreSheafCategoryToObject
    2.6 [33X[0;0YProjective and Injective Resolutions[133X
      2.6-1 IndecomposableProjectiveObjects
      2.6-2 IndecomposableInjectiveObjects
      2.6-3 SimpleObjects
  3 [33X[0;0YFinite cocompletion of a finitely presented (linear) category[133X
    3.1 [33X[0;0YConstructors[133X
    3.2 [33X[0;0YAttributes[133X
      3.2-1 UnderlyingCategory
      3.2-2 YonedaEmbeddingOfUnderlyingCategory
    3.3 [33X[0;0Y[5XGAP[105X Categories[133X
      3.3-1 IsFiniteCocompletion
      3.3-2 IsCellInFiniteCocompletion
      3.3-3 IsObjectInFiniteCocompletion
      3.3-4 IsMorphismInFiniteCocompletion
  4 [33X[0;0YThe category of finite quivers[133X
    4.1 [33X[0;0YConstructors[133X
      4.1-1 CreateQuiver
      4.1-2 CreateQuiver
      4.1-3 CreateQuiverMorphism
      4.1-4 Subobject
      4.1-5 Subobject
    4.2 [33X[0;0YAttributes[133X
      4.2-1 UnderlyingCategory
      4.2-2 YonedaEmbeddingOfUnderlyingCategory
      4.2-3 Arrows
      4.2-4 SvgString
      4.2-5 DotVertexLabelledDigraph
    4.3 [33X[0;0YOperations[133X
    4.4 [33X[0;0YGlobal variables[133X
      4.4-1 QuiverOfCategoryOfQuivers
      4.4-2 FinQuivers
    4.5 [33X[0;0YExample[133X
    4.6 [33X[0;0Y[5XGAP[105X Categories[133X
      4.6-1 IsCategoryOfQuivers
      4.6-2 IsCellInCategoryOfQuivers
      4.6-3 IsObjectInCategoryOfQuivers
      4.6-4 IsMorphismInCategoryOfQuivers
  5 [33X[0;0YCategory of copresheaves of a finitely presented (linear) category[133X
    5.1 [33X[0;0YConstructors[133X
      5.1-1 CoPreSheaves
      5.1-2 CreateCoPreSheaf
      5.1-3 CreateCoPreSheafMorphismByValues
    5.2 [33X[0;0YAttributes[133X
      5.2-1 Source
      5.2-2 Range
      5.2-3 Source
      5.2-4 Range
      5.2-5 OppositeOfSource
      5.2-6 ValuesOfCoPreSheaf
      5.2-7 ValuesOnAllObjects
      5.2-8 UnderlyingCapTwoCategoryCell
    5.3 [33X[0;0Y[5XGAP[105X Categories[133X
      5.3-1 IsCoPreSheafCategory
      5.3-2 IsCellInCoPreSheafCategory
      5.3-3 IsObjectInCoPreSheafCategory
      5.3-4 IsMorphismInCoPreSheafCategory
    5.4 [33X[0;0YOperations[133X
      5.4-1 ApplyObjectInCoPreSheafCategoryToObject
      5.4-2 ApplyMorphismInCoPreSheafCategoryToObject
  6 [33X[0;0YFinite completion of a finitely presented (linear) category[133X
    6.1 [33X[0;0YConstructors[133X
    6.2 [33X[0;0YAttributes[133X
      6.2-1 UnderlyingCategory
      6.2-2 YonedaEmbeddingOfUnderlyingCategory
    6.3 [33X[0;0YExamples[133X
    6.4 [33X[0;0Y[5XGAP[105X Categories[133X
      6.4-1 IsFiniteCompletion
      6.4-2 IsCellInFiniteCompletion
      6.4-3 IsObjectInFiniteCompletion
      6.4-4 IsMorphismInFiniteCompletion
  7 [33X[0;0YFree Abelian category of a finitely presented linear category[133X
    7.1 [33X[0;0YConstructors[133X
      7.1-1 AbelianClosure
    7.2 [33X[0;0YAttributes[133X
      7.2-1 UnderlyingCategory
      7.2-2 YonedaEmbeddingOfUnderlyingCategory
    7.3 [33X[0;0Y[5XGAP[105X Categories[133X
      7.3-1 IsAbelianClosure
      7.3-2 IsCellInAbelianClosure
      7.3-3 IsObjectInAbelianClosure
      7.3-4 IsMorphismInAbelianClosure
  8 [33X[0;0YPrecompilation[133X
    8.1 [33X[0;0YPrecompiling the category of finite quivers[133X
  
  
  [32X
